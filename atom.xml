<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[eBash]]></title>
  <link href="http://www.lvkaiyang.tk//atom.xml" rel="self"/>
  <link href="http://www.lvkaiyang.tk//"/>
  <updated>2013-06-15T11:04:46+08:00</updated>
  <id>http://www.lvkaiyang.tk//</id>
  <author>
    <name><![CDATA[Lv Kaiyang(Kevin Lui)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[project euler problem 27]]></title>
    <link href="http://www.lvkaiyang.tk//blog/2013/06/14/project-euler-27/"/>
    <updated>2013-06-14T23:31:00+08:00</updated>
    <id>http://www.lvkaiyang.tk//blog/2013/06/14/project-euler-27</id>
    <content type="html"><![CDATA[</p>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Problem</a></li>
<li><a href="#sec-2">2 Solution</a></li>
<li><a href="#sec-3">3 Answer</a></li>
</ul>
</div>
</div>

<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Problem</h2>
<div class="outline-text-2" id="text-1">

<blockquote>

<p>Euler discovered the remarkable quadratic formula:
</p>
<p>
n² + n + 41
</p>
<p>
It turns out that the formula will produce 40 primes for the consecutive values n = 0 to 39. However, when n = 40, 402 + 40 + 41 = 40(40 + 1) + 41 is divisible by 41, and certainly when n = 41, 41² + 41 + 41 is clearly divisible by 41.
</p>
<p>
The incredible formula  n² - 79n + 1601 was discovered, which produces 80 primes for the consecutive values n = 0 to 79. The product of the coefficients, -79 and 1601, is -126479.
</p>
<p>
Considering quadratics of the form:
</p>
<p>
n² + an + b, where |a|  1000 and |b|  1000
</p>
<p>
where |n| is the modulus/absolute value of n <br/>
e.g. |11| = 11 and |-4| = 4 
</p>
<p>
Find the product of the coefficients, a and b, for the quadratic expression that produces the maximum number of primes for consecutive values of n, starting with n = 0.
</p>
</blockquote>


</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Solution</h2>
<div class="outline-text-2" id="text-2">

<p> Brute Force,当然如果n为0时,可知b必为素数.还可以试图代入n = 1等,得出a,b相应性质,减小复杂度
</p></div>

</div>

<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Answer</h2>
<div class="outline-text-2" id="text-3">

<p>  -59231
</p>
<p>
Source:<a href="http://sdrv.ms/12MpHJ9">C++</a>
</p></div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[project euler problem 35]]></title>
    <link href="http://www.lvkaiyang.tk//blog/2013/06/14/project-euler-35/"/>
    <updated>2013-06-14T22:44:00+08:00</updated>
    <id>http://www.lvkaiyang.tk//blog/2013/06/14/project-euler-35</id>
    <content type="html"><![CDATA[</p>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Problem</a></li>
<li><a href="#sec-2">2 Solution</a></li>
<li><a href="#sec-3">3 Answer</a></li>
</ul>
</div>
</div>

<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Problem</h2>
<div class="outline-text-2" id="text-1">

<blockquote>

<p>  The number, 197, is called a circular prime because all rotations of the digits: 197, 971, and 719, are themselves prime.
</p>
<p>
There are thirteen such primes below 100: 2, 3, 5, 7, 11, 13, 17, 31, 37, 71, 73, 79, and 97.
</p>
<p>
How many circular primes are there below one million?
</p>
</blockquote>


</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Solution</h2>
<div class="outline-text-2" id="text-2">

<p>  brute force,没什么好说的
</p></div>

</div>

<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Answer</h2>
<div class="outline-text-2" id="text-3">

<p>  55
</p>
<p>
Source:<a href="http://sdrv.ms/12MpN3F">C++</a>
</p></div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[project euler problem 36]]></title>
    <link href="http://www.lvkaiyang.tk//blog/2013/06/10/project-euler-36/"/>
    <updated>2013-06-10T20:24:00+08:00</updated>
    <id>http://www.lvkaiyang.tk//blog/2013/06/10/project-euler-36</id>
    <content type="html"><![CDATA[</p>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Problem</a></li>
<li><a href="#sec-2">2 Solution</a>
<ul>
<li><a href="#sec-2-1">2.1 Brute Force</a></li>
<li><a href="#sec-2-2">2.2 Generate</a></li>
</ul>
</li>
<li><a href="#sec-3">3 Answer</a></li>
</ul>
</div>
</div>

<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Problem</h2>
<div class="outline-text-2" id="text-1">

<blockquote>

<p>  The decimal number, 585 = \(1001001001_2\) (binary), is palindromic in both bases.
</p>
<p>
Find the sum of all numbers, less than one million, which are palindromic in base 10 and base 2.
</p>
<p>
(Please note that the palindromic number, in either base, may not include leading zeros.)
</p>
</blockquote>


</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Solution</h2>
<div class="outline-text-2" id="text-2">


</div>

<div id="outline-container-2-1" class="outline-3">
<h3 id="sec-2-1"><span class="section-number-3">2.1</span> Brute Force</h3>
<div class="outline-text-3" id="text-2-1">

<p>   因为任何进制数字开头不能为0,则二进制表示时最低位必为1,故数字必为奇数.<br/>
   接下来只要对所有范围内的奇数进行回文数检查即可.<br/>
   检查方法:
</p><ol>
<li>将数字每位分解,相应位对比是否相同(121,第一位和第三位比较)
</li>
<li>将数字倒过来写,比较与原数是否相等(123,反过来即321不等)

<p>
      主要利用整除与模,类似于进制间的转换
</p></li>
</ol>

</div>

</div>

<div id="outline-container-2-2" class="outline-3">
<h3 id="sec-2-2"><span class="section-number-3">2.2</span> Generate</h3>
<div class="outline-text-3" id="text-2-2">

<p>   直接在范围内产生要求的二进制回文数,再检查是否为十进制的回文数.检查方法同 Brute Force<br/>
   每个数可生成两个回文数: 01 -&gt; 0110 or 010 <br/>
   具体操作主要用整除与模,对于二进制来说则有更快捷的shift等位操作.
</p></div>
</div>

</div>

<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Answer</h2>
<div class="outline-text-2" id="text-3">

<p>  872187
</p>
<p>  
Source:<a href="http://sdrv.ms/17DumxU">C++</a>
</p>



</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[project euler problem 34]]></title>
    <link href="http://www.lvkaiyang.tk//blog/2013/06/09/project-euler-34/"/>
    <updated>2013-06-09T16:52:00+08:00</updated>
    <id>http://www.lvkaiyang.tk//blog/2013/06/09/project-euler-34</id>
    <content type="html"><![CDATA[</p>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Problem</a></li>
<li><a href="#sec-2">2 Solution</a></li>
<li><a href="#sec-3">3 Answer</a></li>
</ul>
</div>
</div>

<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Problem</h2>
<div class="outline-text-2" id="text-1">

<blockquote>

<p>145 is a curious number, as 1! + 4! + 5! = 1 + 24 + 120 = 145.
</p>
<p>
Find the sum of all numbers which are equal to the sum of the factorial of their digits.
</p>
<p>
Note: as 1! = 1 and 2! = 2 are not sums they are not included.
</p>
</blockquote>


</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Solution</h2>
<div class="outline-text-2" id="text-2">

<p>  问题的关键只要找出上界就行.跟<a href="http://kingfighter.github.io/blog/2013/05/24/project-euler-30/">Project Euler Problem 30</a> 类似,设上界为n位数字,则
</p>
<p>  
  \(10^n\) &lt; 9! * n 
</p>
<p>
  易知n最大为7,更确切的说其上界为 9! * n = 2540160; <br/>
  剩下的就是遍历查找了
</p></div>

</div>

<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Answer</h2>
<div class="outline-text-2" id="text-3">

<p>  40730
</p>
<p>
Source:<a href="http://sdrv.ms/17Dui18">C++</a>
</p></div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[project euler problem 23]]></title>
    <link href="http://www.lvkaiyang.tk//blog/2013/06/09/project-euler-23/"/>
    <updated>2013-06-09T16:21:00+08:00</updated>
    <id>http://www.lvkaiyang.tk//blog/2013/06/09/project-euler-23</id>
    <content type="html"><![CDATA[</p>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Problem</a></li>
<li><a href="#sec-2">2 Solution</a></li>
<li><a href="#sec-3">3 Answer</a></li>
</ul>
</div>
</div>

<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Problem</h2>
<div class="outline-text-2" id="text-1">

<blockquote>

<p>  A perfect number is a number for which the sum of its proper divisors is exactly equal to the number. For example, the sum of the proper divisors of 28 would be 1 + 2 + 4 + 7 + 14 = 28, which means that 28 is a perfect number.
</p>
<p>
A number n is called deficient if the sum of its proper divisors is less than n and it is called abundant if this sum exceeds n.
</p>
<p>
As 12 is the smallest abundant number, 1 + 2 + 3 + 4 + 6 = 16, the smallest number that can be written as the sum of two abundant numbers is 24. By mathematical analysis, it can be shown that all integers greater than 28123 can be written as the sum of two abundant numbers. However, this upper limit cannot be reduced any further by analysis even though it is known that the greatest number that cannot be expressed as the sum of two abundant numbers is less than this limit.
</p>
<p>
Find the sum of all the positive integers which cannot be written as the sum of two abundant numbers.
</p>
</blockquote>


</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Solution</h2>
<div class="outline-text-2" id="text-2">

<p>  上界很明显为28123
</p>
<ol>
<li>计算到上界为止所有数的和,记为sum,并将abundant数保存
</li>
<li>将abundant数两两相加,如不大于上界,则将这两数的和记为可以表示为abundant数相加,即不满足题意要求的数
</li>
<li>所有可表示为abundant数相加的数其和记为abundantsSum
</li>
<li>所求答案即为 sum - abundantsSum
</li>
</ol>


</div>

</div>

<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Answer</h2>
<div class="outline-text-2" id="text-3">

<p>  4179871
</p>
<p>
Source:<a href="http://sdrv.ms/18lliPp">C++</a>
</p></div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[project euler problem 29]]></title>
    <link href="http://www.lvkaiyang.tk//blog/2013/06/08/project-euler-29/"/>
    <updated>2013-06-08T22:12:00+08:00</updated>
    <id>http://www.lvkaiyang.tk//blog/2013/06/08/project-euler-29</id>
    <content type="html"><![CDATA[</p>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Problem</a></li>
<li><a href="#sec-2">2 Solution</a></li>
<li><a href="#sec-3">3 Answer</a></li>
</ul>
</div>
</div>

<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Problem</h2>
<div class="outline-text-2" id="text-1">

<blockquote>

<p>Consider all integer combinations of \(a^b\) for 2 \(\leq\) a \(\leq\) 5 and 2 \(\leq\) b \(\leq\) 5:
</p>
<p>
\(2^2\) =4, \(2^3\) =8, \(2^4\) =16, \(2^5\) =32
\(3^2\) =9, \(3^3\) =27, \(3^4\) =81, \(3^5\) =243
\(4^2\) =16, \(4^3\) =64, \(4^4\) =256, \(4^5\) =1024
\(5^2\) =25, \(5^3\) =125, \(5^4\) =625, \(5^5\) =3125
</p>
<p>
If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:
</p>
<p>
4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125
</p>
<p>
How many distinct terms are in the sequence generated by \(a^b\)  for 2 \(\leq\) a \(\leq\) 100 and 2 \(\leq\) b \(\leq\) 100?
</p>
</blockquote>


</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Solution</h2>
<div class="outline-text-2" id="text-2">

<p>  Set集合
</p></div>

</div>

<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Answer</h2>
<div class="outline-text-2" id="text-3">

<p>  9183
</p>
<p>  
Source:<a href="http://sdrv.ms/14L7x4S">C++</a>
</p>



</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[project euler problem 67]]></title>
    <link href="http://www.lvkaiyang.tk//blog/2013/05/31/project-euler-67/"/>
    <updated>2013-05-31T20:47:00+08:00</updated>
    <id>http://www.lvkaiyang.tk//blog/2013/05/31/project-euler-67</id>
    <content type="html"><![CDATA[</p>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Problem</a></li>
<li><a href="#sec-2">2 Solution</a></li>
<li><a href="#sec-3">3 Answer</a></li>
</ul>
</div>
</div>

<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Problem</h2>
<div class="outline-text-2" id="text-1">

<blockquote>

<p>  By starting at the top of the triangle below and moving to adjacent numbers on the row below, the maximum total from top to bottom is 23.
</p>


  <p style="text-align:center;font-family:courier new;font-size:12pt;"><span style="color:#ff0000;"><b>3</b></span><br />
<span style="color:#ff0000;"><b>7</b></span> 4<br />
2 <span style="color:#ff0000;"><b>4</b></span> 6<br />
8 5 <span style="color:#ff0000;"><b>9</b></span> 3</p>
 

<p>
That is, 3 + 7 + 4 + 9 = 23.
</p>
<p>
Find the maximum total from top to bottom in <a href="http://projecteuler.net/project/triangle.txt">triangle.txt</a> (right click and &#8216;Save Link/Target As&hellip;&#8217;), a 15K text file containing a triangle with one-hundred rows.
</p>
<p>
NOTE: This is a much more difficult version of <a href="http://kingfighter.github.io/blog/2013/05/06/project-euler-18/">Problem 18</a>. It is not possible to try every route to solve this problem, as there are 2<sup>99</sup> altogether! If you could check one trillion (10<sup>12</sup>) routes every second it would take over twenty billion years to check them all. There is an efficient algorithm to solve it. ;o)
</p>

</blockquote>


</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Solution</h2>
<div class="outline-text-2" id="text-2">

<p>  请查看<a href="http://kingfighter.github.io/blog/2013/05/06/project-euler-18/">Problem 18</a>
</p></div>

</div>

<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Answer</h2>
<div class="outline-text-2" id="text-3">

<p>  7273
</p>
<p>
Source:<a href="http://sdrv.ms/18Fx2v3">C++</a>
</p>



</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[project euler problem 30]]></title>
    <link href="http://www.lvkaiyang.tk//blog/2013/05/24/project-euler-30/"/>
    <updated>2013-05-24T22:20:00+08:00</updated>
    <id>http://www.lvkaiyang.tk//blog/2013/05/24/project-euler-30</id>
    <content type="html"><![CDATA[</p>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Problem</a></li>
<li><a href="#sec-2">2 Solution</a></li>
<li><a href="#sec-3">3 Answer</a></li>
</ul>
</div>
</div>

<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Problem</h2>
<div class="outline-text-2" id="text-1">

<blockquote>

<p>Surprisingly there are only three numbers that can be written as the sum of fourth powers of their digits:
\begin{eqnarray*}
1634 = 1^4 +6^4 + 3^4 + 4^4 &#92;
\end{eqnarray*}
\begin{eqnarray*}
8208 = 8^4 + 2^4 + 0^4 + 8^4 &#92;
\end{eqnarray*}
\begin{eqnarray*}
9474 = 9^4 + 4^4 + 7^4 + 4^4 &#92;
\end{eqnarray*}
As 1 = \(1^4\) is not a sum it is not included.
</p>
<p>
The sum of these numbers is 1634 + 8208 + 9474 = 19316.
</p>
<p>
Find the sum of all the numbers that can be written as the sum of fifth powers of their digits.
</p>
</blockquote>


</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Solution</h2>
<div class="outline-text-2" id="text-2">

<p>  很直接,关键是找出上界.个位数是不符合题意的。我们检查多少位时其位数上的值的五次方的和不能表示相应的位数.我们可以看到,到7位数时,其最大就只能表示413343,更不用说8位,9位等了.故上界为354294
</p>
<p>  
  \begin{eqnarray*}
  9^5 + 9^5 = 118098 &#92;
  \end{eqnarray*}
  \begin{eqnarray*}
  9^5 + 9^5 + 9^5 = 177147 &#92;
  \end{eqnarray*}
  \begin{eqnarray*}
  9^5 + 9^5 + 9^5 + 9^5 = 236196 &#92;
  \end{eqnarray*}
  \begin{eqnarray*}
  9^5 + 9^5 + 9^5 + 9^5 + 9^5 = 295245 &#92;
  \end{eqnarray*}
  \begin{eqnarray*}
  9^5 + 9^5 + 9^5 + 9^5 + 9^5 + 9^5 = 354294 &#92;
  \end{eqnarray*}
  \begin{eqnarray*}
  9^5 + 9^5 + 9^5 + 9^5 + 9^5 + 9^5 + 9^5 = 413343 &#92;
  \end{eqnarray*}

</p></div>

</div>

<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Answer</h2>
<div class="outline-text-2" id="text-3">

<p>  443839
</p>
<p>
Source:<a href="http://sdrv.ms/10SnRyK">C++</a>
</p>



</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[project euler problem 24]]></title>
    <link href="http://www.lvkaiyang.tk//blog/2013/05/23/project-euler-24/"/>
    <updated>2013-05-23T23:10:00+08:00</updated>
    <id>http://www.lvkaiyang.tk//blog/2013/05/23/project-euler-24</id>
    <content type="html"><![CDATA[</p>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Problem</a></li>
<li><a href="#sec-2">2 Solution</a></li>
<li><a href="#sec-3">3 Answer</a></li>
</ul>
</div>
</div>

<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Problem</h2>
<div class="outline-text-2" id="text-1">

<blockquote>

<p>A permutation is an ordered arrangement of objects. For example, 3124 is one possible permutation of the digits 1, 2, 3 and 4. If all of the permutations are listed numerically or alphabetically, we call it lexicographic order. The lexicographic permutations of 0, 1 and 2 are:
</p>
<p>
012   021   102   120   201   210
</p>
<p>
What is the millionth lexicographic permutation of the digits 0, 1, 2, 3, 4, 5, 6, 7, 8 and 9?
</p>
</blockquote>


</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Solution</h2>
<div class="outline-text-2" id="text-2">

<p>  看到排列组合的问题,立马就想到了用排列组合的数学方法来求解。<br/>
  只需要高中数学的知识即可,计算过程如下:<br/>
  9!*2 &lt;＝ 1000000 &lt; 9!*3 <br/>
  最高位为从小到大排列未被使用的第三位数字2<br/>
  1000000 – 9!*2 = 274240
</p>
<p>
  8!*6 &lt;＝ 27420 &lt; 8!*7<br/>
  现在数字2已经被使用,故从小到大排列未被使用的第七位数字为7<br/>
  27420 – 241920 = 32320
</p>
<p>
  &hellip;..
</p>
<p>
  按这个过程计算出来的为2783915604,但这并不是真正所求的,而是所求序列的下一个。很容易知道2783915604序列的前一个数为2783915460
</p></div>

</div>

<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Answer</h2>
<div class="outline-text-2" id="text-3">

<p>  2783915460  
</p>
<p>
Source:<a href="http://sdrv.ms/14Fp1Cl">C++</a>
</p>



</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[project euler problem 28]]></title>
    <link href="http://www.lvkaiyang.tk//blog/2013/05/21/project-euler-28/"/>
    <updated>2013-05-21T17:04:00+08:00</updated>
    <id>http://www.lvkaiyang.tk//blog/2013/05/21/project-euler-28</id>
    <content type="html"><![CDATA[</p>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Problem</a></li>
<li><a href="#sec-2">2 Solution</a></li>
<li><a href="#sec-3">3 Answer</a></li>
</ul>
</div>
</div>

<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Problem</h2>
<div class="outline-text-2" id="text-1">

<blockquote>

<p>Starting with the number 1 and moving to the right in a clockwise direction a 5 by 5 spiral is formed as follows:
</p>


<p style='text-align:center;font-family:courier new;'><span style='color:#ff0000;font-family:courier new;'><b>21</b></span> 22 23 24 <span style='color:#ff0000;font-family:courier new;'><b>25</b></span><br />
20 &nbsp;<span style='color:#ff0000;font-family:courier new;'><b>7</b></span> &nbsp;8 &nbsp;<span style='color:#ff0000;font-family:courier new;'><b>9</b></span> 10<br />
19 &nbsp;6 &nbsp;<span style='color:#ff0000;font-family:courier new;'><b>1</b></span> &nbsp;2 11<br />
18 &nbsp;<span style='color:#ff0000;font-family:courier new;'><b>5</b></span> &nbsp;4 &nbsp;<span style='color:#ff0000;font-family:courier new;'><b>3</b></span> 12<br />
<span style='color:#ff0000;font-family:courier new;'><b>17</b></span> 16 15 14 <span style='color:#ff0000;font-family:courier new;'><b>13</b></span></p>

<p>
It can be verified that the sum of the numbers on the diagonals is 101.
</p>
<p>
What is the sum of the numbers on the diagonals in a 1001 by 1001 spiral formed in the same way?
</p>
</blockquote>


</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Solution</h2>
<div class="outline-text-2" id="text-2">

<p>  观察数字1,3,5,7,9,13,17,21,25,易知对角线数字递增规律为连续4个差2(3 + 2 = 5),连续4个差4(9 + 4 =13)&hellip;连续4个差(n-1);
</p>
<p>
  当然我们也可以从中得出递推关系,观察右上对角线数字,1, 9, 25为1, 3, 5的平方,所有我们很容易知道f(n)的最右上的数字为 \(n^2\),则f(n)为f(n-2)加上最外围四个数字:<br/>
  f(n) = f(n - 2) + 4 \(n^2\) - 6(n - 1);<br/>
  一个简单的等差数列,最后求得:<br/>
  \begin{eqnarray*}
  f(n) = \frac{2}{3}(n - 1)^{3} + \frac{5}{2}(n - 1)^2 + \frac{13}{3}(n - 1) + 1
  \end{eqnarray*}

</p></div>

</div>

<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Answer</h2>
<div class="outline-text-2" id="text-3">

<p>  669171001
</p>
<p>  
Source:<a href="http://sdrv.ms/10SI5JC">C++</a>
</p>



</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[project euler problem 19]]></title>
    <link href="http://www.lvkaiyang.tk//blog/2013/05/20/project-euler-19/"/>
    <updated>2013-05-20T16:56:00+08:00</updated>
    <id>http://www.lvkaiyang.tk//blog/2013/05/20/project-euler-19</id>
    <content type="html"><![CDATA[</p>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Problem</a></li>
<li><a href="#sec-2">2 Solution</a></li>
<li><a href="#sec-3">3 Answer</a></li>
</ul>
</div>
</div>

<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Problem</h2>
<div class="outline-text-2" id="text-1">

<blockquote>

<p>  You are given the following information, but you may prefer to do some research for yourself.
</p>
<p>
1 Jan 1900 was a Monday.<br/>
Thirty days has September,<br/>
April, June and November.<br/>
All the rest have thirty-one,<br/>
Saving February alone,<br/>
Which has twenty-eight, rain or shine.<br/>
And on leap years, twenty-nine.<br/>
A leap year occurs on any year evenly divisible by 4, but not on a century unless it is divisible by 400.
</p>
<p>
How many Sundays fell on the first of the month during the twentieth century (1 Jan 1901 to 31 Dec 2000)?
</p>
</blockquote>


</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Solution</h2>
<div class="outline-text-2" id="text-2">

<p>  很直接的,查下表1901/1/1是星期二,此时设表示周几的变量numOfDay = 2,那么1901/2/1是周几？只要numOfDay加上一月份的天数31,再模7得5知为周五.依此法检测1901~2000每月第一天是周几。注意:别忘了2月份的天数需要是否闰年的判断.
</p></div>

</div>

<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Answer</h2>
<div class="outline-text-2" id="text-3">

<p>  171
</p>
<p>  
Source:<a href="http://sdrv.ms/Z9jHbc">C++</a>
</p>



</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[project euler problem 48]]></title>
    <link href="http://www.lvkaiyang.tk//blog/2013/05/20/project-euler-48/"/>
    <updated>2013-05-20T00:10:00+08:00</updated>
    <id>http://www.lvkaiyang.tk//blog/2013/05/20/project-euler-48</id>
    <content type="html"><![CDATA[</p>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Problem</a></li>
<li><a href="#sec-2">2 Solution</a></li>
<li><a href="#sec-3">3 Answer</a></li>
</ul>
</div>
</div>

<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Problem</h2>
<div class="outline-text-2" id="text-1">

<blockquote>

<p>The series, \(1^1\) + \(2^2\) + \(3^3\) + &hellip; + \(10^{10}\) = 10405071317. 
</p>
<p>
Find the last ten digits of the series, \(1^1\) + \(2^2\) + \(3^3\) + &hellip; + \(1000^{1000}\).
</p>
</blockquote>


</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Solution</h2>
<div class="outline-text-2" id="text-2">

<p>对于直接大数据操作的,直接运算即可,不支持的只要对结果用模取最后10位进行操作即可.
</p></div>

</div>

<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Answer</h2>
<div class="outline-text-2" id="text-3">

<p>  9110846700
</p>
<p>
Source:<a href="http://sdrv.ms/14mgROV">C++</a>
</p>



</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[project euler problem 22]]></title>
    <link href="http://www.lvkaiyang.tk//blog/2013/05/19/project-euler-22/"/>
    <updated>2013-05-19T14:47:00+08:00</updated>
    <id>http://www.lvkaiyang.tk//blog/2013/05/19/project-euler-22</id>
    <content type="html"><![CDATA[</p>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Problem</a></li>
<li><a href="#sec-2">2 Solution</a></li>
<li><a href="#sec-3">3 Answer</a></li>
</ul>
</div>
</div>

<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Problem</h2>
<div class="outline-text-2" id="text-1">

<blockquote>

<p>Using <a href="http://sdrv.ms/11QtXXL">names.txt</a> (right click and &#8216;Save Link/Target As&hellip;&#8217;), a 46K text file containing over five-thousand first names, begin by sorting it into alphabetical order. Then working out the alphabetical value for each name, multiply this value by its alphabetical position in the list to obtain a name score.
</p>
<p>
For example, when the list is sorted into alphabetical order, COLIN, which is worth 3 + 15 + 12 + 9 + 14 = 53, is the 938th name in the list. So, COLIN would obtain a score of 938  53 = 49714.
</p>
<p>
What is the total of all the name scores in the file?
</p>
</blockquote>


</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Solution</h2>
<div class="outline-text-2" id="text-2">

<p>没什么好说的,先读入数据,然后排序,最后进行计算,效率关键在于排序.
</p></div>

</div>

<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Answer</h2>
<div class="outline-text-2" id="text-3">

<p>  871198282
</p>
<p>
Source:<a href="http://sdrv.ms/14mgHHl">C++</a>
</p>



</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[project euler problem 21]]></title>
    <link href="http://www.lvkaiyang.tk//blog/2013/05/17/project-euler-21/"/>
    <updated>2013-05-17T16:34:00+08:00</updated>
    <id>http://www.lvkaiyang.tk//blog/2013/05/17/project-euler-21</id>
    <content type="html"><![CDATA[</p>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Problem</a></li>
<li><a href="#sec-2">2 Solution</a></li>
<li><a href="#sec-3">3 Answer</a></li>
</ul>
</div>
</div>

<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Problem</h2>
<div class="outline-text-2" id="text-1">

<blockquote>

<p>Let d(n) be defined as the sum of proper divisors of n (numbers less than n which divide evenly into n).
If d(a) = b and d(b) = a, where a  b, then a and b are an amicable pair and each of a and b are called amicable numbers.
</p>
<p>
For example, the proper divisors of 220 are 1, 2, 4, 5, 10, 11, 20, 22, 44, 55 and 110; therefore d(220) = 284. The proper divisors of 284 are 1, 2, 4, 71 and 142; so d(284) = 220.
</p>
<p>
Evaluate the sum of all the amicable numbers under 10000.
</p>
</blockquote>


</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Solution</h2>
<div class="outline-text-2" id="text-2">


<p>
  按题意暴力求解,但我们还是能在细节进行一些优化.
</p><ol>
<li>我们只寻找amicable pair numbers中小的数,但相加时把两者都加上.
</li>
<li>getDivisorSum的优化
<ol>
<li>直观的,循环只要到sqrt(n)就行,因为除数是对应的,n = a * b,由反证法易知一数小于等于sqrt(n)，另一数大于等于sqrt(n);
</li>
<li>我们考虑求质数,公式(
                      \ref{ref1}
        ),公式(
        \ref{ref2}
        )明显成立,公式(
        \ref{ref3}
        )左右两边展开相等可证<br/>




<pre class="example">getDivisorSum(p1*p2*..p_n) = 1+ p1 + p2 + ... pn + p1p2 + .. + p(n-1)p(n) + ... + p1p2..pn 
                           = (1 + p1)(1 + p2)...(1 + pn) 
                           = getDivisorSum(p1) * getDivisorSum(p2) * ... * getDivisorSum(pn)
</pre>

</li>
</ol>

</li>
</ol>


\begin{eqnarray}
getDivisorSum(p) = (p + 1)\label{ref1}&#92;
\end{eqnarray}
\begin{eqnarray}
getDivisorSum(p^i) = 1 + p^2 + &#8230; + p^i = \frac{p^{i+1}-1}{p-1}\label{ref2}&#92;
\end{eqnarray}
\begin{eqnarray}
getDivisorSum(p1*p2*..p_n) = getDivisorSum(p1) * getDivisorSum(p2) * &#8230;\label{ref3}
\end{eqnarray}

</div>

</div>

<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Answer</h2>
<div class="outline-text-2" id="text-3">

<p>  31626
</p>
<p>
Source:<a href="http://sdrv.ms/10Jy5Co">C++</a>
</p>



</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何阅读一本书]]></title>
    <link href="http://www.lvkaiyang.tk//blog/2013/05/14/how-to-read-a-book/"/>
    <updated>2013-05-14T23:17:00+08:00</updated>
    <id>http://www.lvkaiyang.tk//blog/2013/05/14/how-to-read-a-book</id>
    <content type="html"><![CDATA[做事要讲究方法,读书也是如此.自己虽然读过的书不少,但感觉都没有内化.于是找到了这本书<a href="http://book.douban.com/subject/1013208/">如何阅读一本书</a> (HOW TO READ A BOOK)
</p>
<p>
本书的作者是莫提默·J. 艾德勒,看简介应该是很有学问的人.他系统地介绍了如何阅读一本书.总体行文可以说啰嗦,好听点叫细致,其大体方法从目录大纲即可得知.
</p>
<p>
就我个人而言,虽然从来没有系统化地总结过自己的阅读方法,但大体上与本书作者不谋而合。<br/>
本书将阅读分为四个层次:<br/>
</p><ol>
<li>基础阅读
</li>
<li>检视阅读
</li>
<li>分析阅读
</li>
<li>主题阅读
</li>
</ol>

<p>简单地说,基础阅读，大概为基础识字等准备阶段,识字理解基本意思即可;检视阅读为略读或粗读,分析阅读为阅读理解,主题阅读则为多本书对某一主题进行分析比较.<br/>
我认为,作为高中生至少应该掌握到分析阅读,大学生至少应该掌握所有的层次.
</p>
<p>
这本书于我的价值最大的倒不是所谓的阅读技巧(我已经基本掌握,只是没有系统化的去理解),而是作者的一些理念.
</p>
<blockquote>

<p>阅读越主动，效果越好
</p>
</blockquote>


<p>
阅读心不在焉,神游其外,陷入茫茫之中,不知书中所言,对内容逆来顺受,当然不能希望能有多大的收获了.
</p>
<blockquote>

<p>所谓阅读速度，理想上来说，不只是要能读得快，还要能用不同的速度来阅读—要知道什么时候用
什么样的速度是恰当的
</p>
</blockquote>


<p>
现在呀,凡事都求快,社会确实浮躁了些。我常常看到一些人晒出自己一年读了几百本书,然后对比自己一年的阅读量,当真是十分的励志！可惜我没法询问当事人阅读的效果.快当然是好,但过犹不及.一些难懂,经典的书籍是需要慢去理解的,一些片段是需要慢去欣赏的.因为就没必要一味的追求数量.当今是信息大爆炸的时代,固然对信息的快速处理(快速阅读)的技巧十分重要,但对信息的筛选,有效的处理却更重要,现在可没人能穷尽所有书籍了.我秉持着一种信念&#8221;精优于胜&#8221;,一般情况下泛泛而读一万本也比不上读精一本书.
</p>
<p>
不管对于有经验的还是缺乏阅读技巧的读者,这本书还是有所价值的.
</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[project euler problem 18]]></title>
    <link href="http://www.lvkaiyang.tk//blog/2013/05/06/project-euler-18/"/>
    <updated>2013-05-06T23:38:00+08:00</updated>
    <id>http://www.lvkaiyang.tk//blog/2013/05/06/project-euler-18</id>
    <content type="html"><![CDATA[</p>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Problem</a></li>
<li><a href="#sec-2">2 Solution</a>
<ul>
<li><a href="#sec-2-1">2.1 Brute Force</a></li>
<li><a href="#sec-2-2">2.2 递归</a>
<ul>
<li><a href="#sec-2-2-1">2.2.1 分析</a></li>
<li><a href="#sec-2-2-2">2.2.2 例子</a></li>
</ul>
</li>
<li><a href="#sec-2-3">2.3 Bottom-Up</a>
<ul>
<li><a href="#sec-2-3-1">2.3.1 分析</a></li>
<li><a href="#sec-2-3-2">2.3.2 例子</a></li>
</ul></li>
</ul>
</li>
<li><a href="#sec-3">3 Answer</a></li>
</ul>
</div>
</div>

<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Problem</h2>
<div class="outline-text-2" id="text-1">

<blockquote>

<p>By starting at the top of the triangle below and moving to adjacent numbers on the row below, the maximum total from top to bottom is 23.
</p>


<p style="text-align:center;font-family:courier new;font-size:12pt;"><span style="color:#ff0000;"><b>3</b></span><br />
<span style="color:#ff0000;"><b>7</b></span> 4<br />
2 <span style="color:#ff0000;"><b>4</b></span> 6<br />
8 5 <span style="color:#ff0000;"><b>9</b></span> 3</p>

<p>
That is, 3 + 7 + 4 + 9 = 23.
</p>
<p>
Find the maximum total from top to bottom of the triangle below:
<p style="text-align:center;font-family:courier new;">75<br />
95 64<br />
17 47 82<br />
18 35 87 10<br />
20 04 82 47 65<br />
19 01 23 75 03 34<br />
88 02 77 73 07 63 67<br />
99 65 04 28 06 16 70 92<br />
41 41 26 56 83 40 80 70 33<br />
41 48 72 33 47 32 37 16 94 29<br />
53 71 44 65 25 43 91 52 97 51 14<br />
70 11 33 28 77 73 17 78 39 68 17 57<br />
91 71 52 38 17 14 91 43 58 50 27 29 48<br />
63 66 04 68 89 53 67 30 73 16 69 87 40 31<br />
04 62 98 27 23 09 70 98 73 93 38 53 60 04 23</p>

NOTE: As there are only 16384 routes, it is possible to solve this problem by trying every route. However, Problem 67, is the same challenge with a triangle containing one-hundred rows; it cannot be solved by brute force, and requires a clever method! ;o)
</p>
</blockquote>


</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Solution</h2>
<div class="outline-text-2" id="text-2">


</div>

<div id="outline-container-2-1" class="outline-3">
<h3 id="sec-2-1"><span class="section-number-3">2.1</span> Brute Force</h3>
<div class="outline-text-3" id="text-2-1">

<p>直接的方法就是brute force,但对于大数据量时速度会很慢.<br/>
对于n层高,共有 \(\frac{(n+1)n}{2}\) 个数字,由归纳法易知需要穷尽 \(2^{n-1}\) 条路径,每条路径上有n个数字，需要 \(\Theta(2^{n-1}n)\) 的时间, 易知数字总数m = \(\frac{(n + 2)(n + 1)}{2}\) ,则 m = \(\frac{\sqrt{1+8m}-3}{2}\),代入其中即得关于输入个数m的时间复杂度.
</p></div>

</div>

<div id="outline-container-2-2" class="outline-3">
<h3 id="sec-2-2"><span class="section-number-3">2.2</span> 递归</h3>
<div class="outline-text-3" id="text-2-2">


</div>

<div id="outline-container-2-2-1" class="outline-4">
<h4 id="sec-2-2-1"><span class="section-number-4">2.2.1</span> 分析</h4>
<div class="outline-text-4" id="text-2-2-1">

<p>    \(p_{i}\) 为第i个数字到最末层相邻数字相加最大值, \(a_{i}\) 为第i个数字的值, \(i\in(0,\frac{(n + 1)(n + 2)}{2})\) <br/>
    题目所求为 \(p_{0}\) 的值，易知 \(p_{0}\) = max(\(p_{1}\), \(p_{2}\)) + \(a_{0}\) , \(p_{1}\) = max(\(p_{3}\), \(p_{4}\)) + \(a_{1}\) ,&hellip;<br/>
    设共有n层高(从0开始),则对于i层(第 \(\frac{(i + 1)i}{2}\) ~ \(\frac{(i + 1)i}{2} + i\) 个数),以下等式成立:<br/>
    \(p_{j}\) = max(\(p_{j + i + 1}\), \(p_{j + i + 2}\)) + \(a_{j}\)  j \(\in[\frac{(i + 1)i}{2}\) , \(\frac{(i + 1)i}{2} + i]\) <br/>
    \(p_{j}\) = \(a_{j}\)  j \(\in[\frac{(n + 1)n}{2}\) , \(\frac{(n + 1)n}{2} + n]\) <br/>
    对于n层高,其时间复杂度为 \(\Theta(\frac{(n+1)n}{2})\),易知数字总数m = \(\frac{(n + 2)(n + 1)}{2}\) ,则转换知对于输入个数m,其时间复杂度为 \(\Theta(m)\)
</p></div>

</div>

<div id="outline-container-2-2-2" class="outline-4">
<h4 id="sec-2-2-2"><span class="section-number-4">2.2.2</span> 例子</h4>
<div class="outline-text-4" id="text-2-2-2">

<p>对于原题中的例子其递归调用过程如下:
</p>
<p class="verse">
\(p_0\) = max(\(p_1\), \(p_2\)) + 3<br/>
\(p_1\) = max(\(p_3\), \(p_4\)) + 7<br/>
\(p_3\) = max(\(p_6\), \(p_7\)) + 2<br/>
\(p_6\) = 8<br/>
\(p_7\) = 5<br/>
\(p_3\) = 8 + 2 = 10<br/>
\(p_4\) = max(\(p_7\), \(p_8\)) + 4<br/>
\(p_8\) = 9<br/>
\(p_4\) = 9 + 4 = 13<br/>
\(p_1\) = 9 + 4 + 7 = 20<br/>
\(p_2\) = max(\(p_4\), \(p_5\)) + 4<br/>
\(p_5\) = max(\(p_8\), \(p_9\)) + 6<br/>
\(p_9\) = 3<br/>
\(p_5\) = 9 + 6 = 15<br/>
\(p_2\) = 9 + 6 + 4 = 19<br/>
\(p_0\) = 9 + 4 + 7 + 3 = 23<br/>
</p>


<p>
可以近似把所有数字看作一棵树,则为前序遍历,后序计算
</p></div>
</div>

</div>

<div id="outline-container-2-3" class="outline-3">
<h3 id="sec-2-3"><span class="section-number-3">2.3</span> Bottom-Up</h3>
<div class="outline-text-3" id="text-2-3">


</div>

<div id="outline-container-2-3-1" class="outline-4">
<h4 id="sec-2-3-1"><span class="section-number-4">2.3.1</span> 分析</h4>
<div class="outline-text-4" id="text-2-3-1">

<p>我们将上述递归算法转换为迭代,过程如下: <br/>
第n层时, \(p_{j}\) = \(a_{j}\)  j \(\in[\frac{(n + 1)n}{2}\) , \(\frac{(n + 1)n}{2} + n]\) <br/>
第i层, \(p_{j}\) = max(\(p_{j + i + 1}\), \(p_{j + i + 2}\)) + \(a_{j}\)  j \(\in[\frac{(i + 1)i}{2}\) , \(\frac{(i + 1)i}{2} + i]\) <br/>
与递归大抵类似.
</p>
<p>
对于输入个数n,其时间复杂度与递归类似为 \(\Theta(n)\), 如果 \(p_i\) 与 \(a_i\) 使用同一数组,则其空间复杂度为 \(\Theta(1)\)
</p></div>

</div>

<div id="outline-container-2-3-2" class="outline-4">
<h4 id="sec-2-3-2"><span class="section-number-4">2.3.2</span> 例子</h4>
<div class="outline-text-4" id="text-2-3-2">

<p>其计算过程如下:
</p>


<pre class="example">   3                3             3          23
  7 4             7  4         20   19  
 2 4 6    -&gt;    10 13 15   -&gt;           -&gt;  
8 5 9 3       
</pre>

</div>
</div>
</div>

</div>

<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Answer</h2>
<div class="outline-text-2" id="text-3">

<p>  1074
</p>
<p>
Source:<a href="http://sdrv.ms/18WJuTc">C++迭代</a> <a href="http://sdrv.ms/18WJyCn">C++递归</a>
</p>



</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[project euler problem 17]]></title>
    <link href="http://www.lvkaiyang.tk//blog/2013/05/05/project-euler-17/"/>
    <updated>2013-05-05T11:09:00+08:00</updated>
    <id>http://www.lvkaiyang.tk//blog/2013/05/05/project-euler-17</id>
    <content type="html"><![CDATA[</p>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Problem</a></li>
<li><a href="#sec-2">2 Solution</a></li>
<li><a href="#sec-3">3 Answer</a></li>
</ul>
</div>
</div>

<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Problem</h2>
<div class="outline-text-2" id="text-1">

<blockquote>

<p>If the numbers 1 to 5 are written out in words: one, two, three, four, five, then there are 3 + 3 + 5 + 4 + 4 = 19 letters used in total.
</p>
<p>
If all the numbers from 1 to 1000 (one thousand) inclusive were written out in words, how many letters would be used?
</p>

<p>
NOTE: Do not count spaces or hyphens. For example, 342 (three hundred and forty-two) contains 23 letters and 115 (one hundred and fifteen) contains 20 letters. The use of &#8220;and&#8221; when writing out numbers is in compliance with British usage.
</p>
</blockquote>


</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Solution</h2>
<div class="outline-text-2" id="text-2">

<p>我们知道&lt;1000的都可由,one,two&hellip;ninteen,twenty,thirty&hellip;ninety,hundred,and 这些英文字母表达出来，并将one~nineteen的字母数保存在数组 <code>a[19]={3, 3, 5, 4, 4, 3, 5, 5, 4, 3, 6, 6, 8, 8, 7, 7, 9, 8, 8}</code> 中，twenty,thirty..ninety的字母数保存在数组 <code>b[8]＝{6, 6, 5, 5, 5, 7, 6, 6}</code> 中，简单分类计算sum：
</p>
<ol>
<li>\(i\in[1,20)\) <br/>
            sum = sum+ a[i - 1]
</li>
<li>\(i\in[20,100)\)
<ol>
<li>sum = sum + b[i / 10 - 2]   \(i\in\) {20,30,..90}
</li>
<li>sum = sum + b[i / 10 - 2] + a[i % 10 - 1] \(i\in\) {21,22,&hellip;99}
</li>
</ol>

</li>
<li>\(i\in[100,1000)\)
<ol>
<li>sum = sum + a[i / 100 - 1] + len(&#8220;hundred&#8221;)  \(i\in\) {100,200,300..900}
</li>
<li>sum = sum + a[i / 100 - 1] + len(&#8220;hundred&#8221;) + len(&#8220;and&#8221;) + a[i % 100 - 1]; \(i\in\) {101-119,201-219,&hellip;901-919}
</li>
<li>sum = sum + a[i / 100 - 1] + len(&#8220;hundred&#8221;) + len(&#8220;and&#8221;) + b[i / 10 % 10 - 2]; \(i\in\) {120,130,140..990}
</li>
<li>sum = sum + a[i / 100 - 1] + len(&#8220;hundred&#8221;) + len(&#8220;and&#8221;) + a[i % 10 - 1] + b[i / 10 % 10 - 2]; \(i\in\) {121,122&hellip;999}
</li>
</ol>

</li>
<li>\(i = 1000\) <br/>
   sum = sum + len(&#8220;one&#8221;) + len(&#8220;thousand&#8221;);
</li>
</ol>

</div>

</div>

<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Answer</h2>
<div class="outline-text-2" id="text-3">

<p>  21124
</p>
<p>
Source:<a href="http://sdrv.ms/12afIbb">C++</a>
</p>



</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[project euler problem 15]]></title>
    <link href="http://www.lvkaiyang.tk//blog/2013/05/04/project-euler-15/"/>
    <updated>2013-05-04T17:19:00+08:00</updated>
    <id>http://www.lvkaiyang.tk//blog/2013/05/04/project-euler-15</id>
    <content type="html"><![CDATA[</p>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Problem</a></li>
<li><a href="#sec-2">2 Solution</a></li>
<li><a href="#sec-3">3 Answer</a></li>
</ul>
</div>
</div>

<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Problem</h2>
<div class="outline-text-2" id="text-1">

<blockquote>

<p>Starting in the top left corner of a 2*2 grid, and only being able to move to the right and down, there are exactly 6 routes to the bottom right corner.
</p>
<p>
<img src="http://projecteuler.net/project/images/p_015.gif"  alt="http://projecteuler.net/project/images/p_015.gif" />
</p>
<p>
How many such routes are there through a 20*20 grid?
</p>

</blockquote>


</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Solution</h2>
<div class="outline-text-2" id="text-2">

<p>设左上角坐标为(0,0),右下角坐标为(n,n),则有
</p>
<p>
递归式:
</p>
<p>
path(i, j) = path(i-1, j) + path(i, j-1)
</p>
<p>
因为只能向右或向下运动，故处于某点(i,j)时的路径数为与此点相邻的(i-1,j)和(i,j-1)路径数之和.
</p>
<p>
递归终止条件为当点位于最右(最下)时，其路径数是唯一的,只能一直向下（向右),即path(n,i) = 1, path(i,n) = 1
</p>
<p>
从数学的角度看,只需要用到高中的排列组合.从源到目的地共需要移动n + n步,求其路径数即求哪些步骤向右哪些步骤向下，即：
</p>
<p>
path = \(C_{2n}^{n}\)
</p>
<p>
当然对于a*b的格子路径数也是同样的做法
</p></div>

</div>

<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Answer</h2>
<div class="outline-text-2" id="text-3">

<p>  137846528820
</p>
<p>
Source:<a href="http://sdrv.ms/11KEkGY">C++</a>
</p>



</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[project euler problem 25]]></title>
    <link href="http://www.lvkaiyang.tk//blog/2013/04/30/project-euler-25/"/>
    <updated>2013-04-30T14:02:00+08:00</updated>
    <id>http://www.lvkaiyang.tk//blog/2013/04/30/project-euler-25</id>
    <content type="html"><![CDATA[</p>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Problem</a></li>
<li><a href="#sec-2">2 Solution</a></li>
<li><a href="#sec-3">3 Answer</a></li>
</ul>
</div>
</div>

<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Problem</h2>
<div class="outline-text-2" id="text-1">

<blockquote>

<p>The Fibonacci sequence is defined by the recurrence relation:
</p>
<p>
\(F_{n}\) = \(F_{n-1}\) + \(F_{n-2}\) , where \(F_1\) = 1 and \(F_2\) = 1.
Hence the first 12 terms will be:
</p>
<p>
\(F_1\) = 1 <br/>
\(F_2\) = 1 <br/>
\(F_3\) = 2 <br/>
\(F_4\) = 3 <br/>
\(F_5\) = 5 <br/>
\(F_6\) = 8 <br/>
\(F_7\) = 13 <br/>
\(F_8\) = 21 <br/>
\(F_9\) = 34 <br/>
\(F_{10}\) = 55 <br/>
\(F_{11}\) = 89 <br/>
\(F_{12}\) = 144 <br/>
The 12th term, \(F_{12}\) , is the first term to contain three digits.
</p>
<p>
What is the first term in the Fibonacci sequence to contain 1000 digits?
</p>
</blockquote>


</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Solution</h2>
<div class="outline-text-2" id="text-2">

<p>没什么好说的,大数据处理
</p></div>

</div>

<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Answer</h2>
<div class="outline-text-2" id="text-3">

<p>  4782
</p>
<p>
Source:<a href="http://sdrv.ms/ZZ3rEu">C++</a>
</p>



</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[project euler problem 12]]></title>
    <link href="http://www.lvkaiyang.tk//blog/2013/04/30/project-euler-12/"/>
    <updated>2013-04-30T13:54:00+08:00</updated>
    <id>http://www.lvkaiyang.tk//blog/2013/04/30/project-euler-12</id>
    <content type="html"><![CDATA[</p>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Problem</a></li>
<li><a href="#sec-2">2 Solution</a></li>
<li><a href="#sec-3">3 Answer</a></li>
</ul>
</div>
</div>

<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Problem</h2>
<div class="outline-text-2" id="text-1">

<blockquote>

<p>The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
</p>
<p>
1, 3, 6, 10, 15, 21, 28, 36, 45, 55, &hellip;
</p>
<p>
Let us list the factors of the first seven triangle numbers:
</p>
<p>
 1: 1 <br/>
 3: 1,3 <br/>
 6: 1,2,3,6 <br/>
10: 1,2,5,10 <br/>
15: 1,3,5,15 <br/>
21: 1,3,7,21 <br/>
28: 1,2,4,7,14,28 <br/>
We can see that 28 is the first triangle number to have over five divisors.
</p>
<p>
What is the value of the first triangle number to have over five hundred divisors?
</p>
</blockquote>


</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Solution</h2>
<div class="outline-text-2" id="text-2">

<p>n = a * b <br/>
假设 \(a\leq b\),则有 \(a\leq \sqrt{n}\), 每有一个a就有两个被除数.
</p></div>

</div>

<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Answer</h2>
<div class="outline-text-2" id="text-3">

<p>  76576500
</p>
<p>
Source:<a href="http://sdrv.ms/15WaeWW">C++</a>
</p>



</div>
</div>
]]></content>
  </entry>
  
</feed>
