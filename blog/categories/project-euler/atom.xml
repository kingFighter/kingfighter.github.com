<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: project euler | eBash]]></title>
  <link href="http://www.lvkaiyang.tk//blog/categories/project-euler/atom.xml" rel="self"/>
  <link href="http://www.lvkaiyang.tk//"/>
  <updated>2013-05-08T16:28:11+08:00</updated>
  <id>http://www.lvkaiyang.tk//</id>
  <author>
    <name><![CDATA[Lv Kaiyang(Kevin Lui)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[project euler problem 18]]></title>
    <link href="http://www.lvkaiyang.tk//blog/2013/05/06/project-euler-18/"/>
    <updated>2013-05-06T23:38:00+08:00</updated>
    <id>http://www.lvkaiyang.tk//blog/2013/05/06/project-euler-18</id>
    <content type="html"><![CDATA[<p></p></p>

<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Problem</a></li>
<li><a href="#sec-2">2 Solution</a>
<ul>
<li><a href="#sec-2-1">2.1 Brute Force</a></li>
<li><a href="#sec-2-2">2.2 递归</a>
<ul>
<li><a href="#sec-2-2-1">2.2.1 分析</a></li>
<li><a href="#sec-2-2-2">2.2.2 例子</a></li>
</ul>
</li>
<li><a href="#sec-2-3">2.3 Bottom-Up</a>
<ul>
<li><a href="#sec-2-3-1">2.3.1 分析</a></li>
<li><a href="#sec-2-3-2">2.3.2 例子</a></li>
</ul></li>
</ul>
</li>
<li><a href="#sec-3">3 Answer</a></li>
</ul>
</div>
</div>




<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Problem</h2>
<div class="outline-text-2" id="text-1">

<blockquote>

<p>By starting at the top of the triangle below and moving to adjacent numbers on the row below, the maximum total from top to bottom is 23.
</p>


<p style="text-align:center;font-family:courier new;font-size:12pt;"><span style="color:#ff0000;"><b>3</b></span><br />
<span style="color:#ff0000;"><b>7</b></span> 4<br />
2 <span style="color:#ff0000;"><b>4</b></span> 6<br />
8 5 <span style="color:#ff0000;"><b>9</b></span> 3</p>

<p>
That is, 3 + 7 + 4 + 9 = 23.
</p>
<p>
Find the maximum total from top to bottom of the triangle below:
<p style="text-align:center;font-family:courier new;">75<br />
95 64<br />
17 47 82<br />
18 35 87 10<br />
20 04 82 47 65<br />
19 01 23 75 03 34<br />
88 02 77 73 07 63 67<br />
99 65 04 28 06 16 70 92<br />
41 41 26 56 83 40 80 70 33<br />
41 48 72 33 47 32 37 16 94 29<br />
53 71 44 65 25 43 91 52 97 51 14<br />
70 11 33 28 77 73 17 78 39 68 17 57<br />
91 71 52 38 17 14 91 43 58 50 27 29 48<br />
63 66 04 68 89 53 67 30 73 16 69 87 40 31<br />
04 62 98 27 23 09 70 98 73 93 38 53 60 04 23</p>

NOTE: As there are only 16384 routes, it is possible to solve this problem by trying every route. However, Problem 67, is the same challenge with a triangle containing one-hundred rows; it cannot be solved by brute force, and requires a clever method! ;o)
</p>
</blockquote>


</div>

</div>




<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Solution</h2>
<div class="outline-text-2" id="text-2">


</div>

<div id="outline-container-2-1" class="outline-3">
<h3 id="sec-2-1"><span class="section-number-3">2.1</span> Brute Force</h3>
<div class="outline-text-3" id="text-2-1">

<p>直接的方法就是brute force,但对于大数据量时速度会很慢.<br/>
对于n层高,共有 \(\frac{(n+1)n}{2}\) 个数字,由归纳法易知需要穷尽 \(2^{n-1}\) 条路径,每条路径上有n个数字，需要 \(\Theta(2^{n-1}n)\) 的时间, 易知数字总数m = \(\frac{(n + 2)(n + 1)}{2}\) ,则 m = \(\frac{\sqrt{1+8m}-3}{2}\),代入其中即得关于输入个数m的时间复杂度.
</p></div>

</div>

<div id="outline-container-2-2" class="outline-3">
<h3 id="sec-2-2"><span class="section-number-3">2.2</span> 递归</h3>
<div class="outline-text-3" id="text-2-2">


</div>

<div id="outline-container-2-2-1" class="outline-4">
<h4 id="sec-2-2-1"><span class="section-number-4">2.2.1</span> 分析</h4>
<div class="outline-text-4" id="text-2-2-1">

<p>    \(p_{i}\) 为第i个数字到最末层相邻数字相加最大值, \(a_{i}\) 为第i个数字的值, \(i\in(0,\frac{(n + 1)(n + 2)}{2})\) <br/>
    题目所求为 \(p_{0}\) 的值，易知 \(p_{0}\) = max(\(p_{1}\), \(p_{2}\)) + \(a_{0}\) , \(p_{1}\) = max(\(p_{3}\), \(p_{4}\)) + \(a_{1}\) ,&hellip;<br/>
    设共有n层高(从0开始),则对于i层(第 \(\frac{(i + 1)i}{2}\) ~ \(\frac{(i + 1)i}{2} + i\) 个数),以下等式成立:<br/>
    \(p_{j}\) = max(\(p_{j + i + 1}\), \(p_{j + i + 2}\)) + \(a_{j}\)  j \(\in[\frac{(i + 1)i}{2}\) , \(\frac{(i + 1)i}{2} + i]\) <br/>
    其终止条件为第n层时, \(p_{j}\) = \(a_{j}\)  j \(\in[\frac{(n + 1)n}{2}\) , \(\frac{(n + 1)n}{2} + n]\) <br/>
    对于n层高,其时间复杂度为 \(\Theta(\frac{(n+1)n}{2})\),易知数字总数m = \(\frac{(n + 2)(n + 1)}{2}\) ,则转换知对于输入个数m,其时间复杂度为 \(\Theta(m)\),其时间复杂度为
</p></div>

</div>

<div id="outline-container-2-2-2" class="outline-4">
<h4 id="sec-2-2-2"><span class="section-number-4">2.2.2</span> 例子</h4>
<div class="outline-text-4" id="text-2-2-2">

<p>对于原题中的例子其递归调用过程如下:
</p>
<p class="verse">
\(p_0\) = max(\(p_1\), \(p_2\)) + 3<br/>
\(p_1\) = max(\(p_3\), \(p_4\)) + 7<br/>
\(p_3\) = max(\(p_6\), \(p_7\)) + 2<br/>
\(p_6\) = 8<br/>
\(p_7\) = 5<br/>
\(p_3\) = 8 + 2 = 10<br/>
\(p_4\) = max(\(p_7\), \(p_8\)) + 4<br/>
\(p_8\) = 9<br/>
\(p_4\) = 9 + 4 = 13<br/>
\(p_1\) = 9 + 4 + 7 = 20<br/>
\(p_2\) = max(\(p_4\), \(p_5\)) + 4<br/>
\(p_5\) = max(\(p_8\), \(p_9\)) + 6<br/>
\(p_9\) = 3<br/>
\(p_5\) = 9 + 6 = 15<br/>
\(p_2\) = 9 + 6 + 4 = 19<br/>
\(p_0\) = 9 + 4 + 7 + 3 = 23<br/>
</p>


<p>
可以近似把所有数字看作一棵树,则为前序遍历,后序计算
</p></div>
</div>

</div>

<div id="outline-container-2-3" class="outline-3">
<h3 id="sec-2-3"><span class="section-number-3">2.3</span> Bottom-Up</h3>
<div class="outline-text-3" id="text-2-3">


</div>

<div id="outline-container-2-3-1" class="outline-4">
<h4 id="sec-2-3-1"><span class="section-number-4">2.3.1</span> 分析</h4>
<div class="outline-text-4" id="text-2-3-1">

<p>我们将上述递归算法转换为迭代,过程如下: <br/>
第n层时, \(p_{j}\) = \(a_{j}\)  j \(\in[\frac{(n + 1)n}{2}\) , \(\frac{(n + 1)n}{2} + n]\) <br/>
第i层, \(p_{j}\) = max(\(p_{j + i + 1}\), \(p_{j + i + 2}\)) + \(a_{j}\)  j \(\in[\frac{(i + 1)i}{2}\) , \(\frac{(i + 1)i}{2} + i]\) <br/>
与递归大抵类似.
</p>
<p>
对于输入个数n,其时间复杂度与递归类似为 \(\Theta(n)\), 如果 \(p_i\) 与 \(a_i\) 使用同一数组,则其空间复杂度为 \(\Theta(1)\)
</p></div>

</div>

<div id="outline-container-2-3-2" class="outline-4">
<h4 id="sec-2-3-2"><span class="section-number-4">2.3.2</span> 例子</h4>
<div class="outline-text-4" id="text-2-3-2">

<p>其计算过程如下:
</p>


<pre class="example">   3                3             3          23
  7 4             7  4         20   19  
 2 4 6    -&gt;    10 13 15   -&gt;           -&gt;  
8 5 9 3       
</pre>

</div>
</div>
</div>

</div>




<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Answer</h2>
<div class="outline-text-2" id="text-3">

<p>  1074
</p>
<p>
Source:<a href="http://sdrv.ms/18WJuTc">C++迭代</a> <a href="http://sdrv.ms/18WJyCn">C++递归</a>
</p>



</div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[project euler problem 17]]></title>
    <link href="http://www.lvkaiyang.tk//blog/2013/05/05/project-euler-17/"/>
    <updated>2013-05-05T11:09:00+08:00</updated>
    <id>http://www.lvkaiyang.tk//blog/2013/05/05/project-euler-17</id>
    <content type="html"><![CDATA[<p></p></p>

<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Problem</a></li>
<li><a href="#sec-2">2 Solution</a></li>
<li><a href="#sec-3">3 Answer</a></li>
</ul>
</div>
</div>




<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Problem</h2>
<div class="outline-text-2" id="text-1">

<blockquote>

<p>If the numbers 1 to 5 are written out in words: one, two, three, four, five, then there are 3 + 3 + 5 + 4 + 4 = 19 letters used in total.
</p>
<p>
If all the numbers from 1 to 1000 (one thousand) inclusive were written out in words, how many letters would be used?
</p>

<p>
NOTE: Do not count spaces or hyphens. For example, 342 (three hundred and forty-two) contains 23 letters and 115 (one hundred and fifteen) contains 20 letters. The use of "and" when writing out numbers is in compliance with British usage.
</p>
</blockquote>


</div>

</div>




<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Solution</h2>
<div class="outline-text-2" id="text-2">

<p>我们知道&lt;1000的都可由,one,two&hellip;ninteen,twenty,thirty&hellip;ninety,hundred,and 这些英文字母表达出来，并将one~nineteen的字母数保存在数组 <code>a[19]={3, 3, 5, 4, 4, 3, 5, 5, 4, 3, 6, 6, 8, 8, 7, 7, 9, 8, 8}</code> 中，twenty,thirty..ninety的字母数保存在数组 <code>b[8]＝{6, 6, 5, 5, 5, 7, 6, 6}</code> 中，简单分类计算sum：
</p>
<ol>
<li>\(i\in[1,20)\) <br/>
            sum = sum+ a[i - 1]
</li>
<li>\(i\in[20,100)\)
<ol>
<li>sum = sum + b[i / 10 - 2]   \(i\in\) {20,30,..90}
</li>
<li>sum = sum + b[i / 10 - 2] + a[i % 10 - 1] \(i\in\) {21,22,&hellip;99}
</li>
</ol>

</li>
<li>\(i\in[100,1000)\)
<ol>
<li>sum = sum + a[i / 100 - 1] + len("hundred")  \(i\in\) {100,200,300..900}
</li>
<li>sum = sum + a[i / 100 - 1] + len("hundred") + len("and") + a[i % 100 - 1]; \(i\in\) {101-119,201-219,&hellip;901-919}
</li>
<li>sum = sum + a[i / 100 - 1] + len("hundred") + len("and") + b[i / 10 % 10 - 2]; \(i\in\) {120,130,140..990}
</li>
<li>sum = sum + a[i / 100 - 1] + len("hundred") + len("and") + a[i % 10 - 1] + b[i / 10 % 10 - 2]; \(i\in\) {121,122&hellip;999}
</li>
</ol>

</li>
<li>\(i = 1000\) <br/>
   sum = sum + len("one") + len("thousand");
</li>
</ol>

</div>

</div>




<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Answer</h2>
<div class="outline-text-2" id="text-3">

<p>  21124
</p>
<p>
Source:<a href="http://sdrv.ms/12afIbb">C++</a>
</p>



</div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[project euler problem 15]]></title>
    <link href="http://www.lvkaiyang.tk//blog/2013/05/04/project-euler-15/"/>
    <updated>2013-05-04T17:19:00+08:00</updated>
    <id>http://www.lvkaiyang.tk//blog/2013/05/04/project-euler-15</id>
    <content type="html"><![CDATA[<p></p></p>

<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Problem</a></li>
<li><a href="#sec-2">2 Solution</a></li>
<li><a href="#sec-3">3 Answer</a></li>
</ul>
</div>
</div>




<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Problem</h2>
<div class="outline-text-2" id="text-1">

<blockquote>

<p>Starting in the top left corner of a 2*2 grid, and only being able to move to the right and down, there are exactly 6 routes to the bottom right corner.
</p>
<p>
<img src="http://projecteuler.net/project/images/p_015.gif"  alt="http://projecteuler.net/project/images/p_015.gif" />
</p>
<p>
How many such routes are there through a 20*20 grid?
</p>

</blockquote>


</div>

</div>




<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Solution</h2>
<div class="outline-text-2" id="text-2">

<p>设左上角坐标为(0,0),右下角坐标为(n,n),则有
</p>
<p>
递归式:
</p>
<p>
path(i, j) = path(i-1, j) + path(i, j-1)
</p>
<p>
因为只能向右或向下运动，故处于某点(i,j)时的路径数为与此点相邻的(i-1,j)和(i,j-1)路径数之和.
</p>
<p>
递归终止条件为当点位于最右(最下)时，其路径数是唯一的,只能一直向下（向右),即path(n,i) = 1, path(i,n) = 1
</p>
<p>
从数学的角度看,只需要用到高中的排列组合.从源到目的地共需要移动n + n步,求其路径数即求哪些步骤向右哪些步骤向下，即：
</p>
<p>
path = \(C_{2n}^{n}\)
</p>
<p>
当然对于a*b的格子路径数也是同样的做法
</p></div>

</div>




<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Answer</h2>
<div class="outline-text-2" id="text-3">

<p>  137846528820
</p>
<p>
Source:<a href="http://sdrv.ms/11KEkGY">C++</a>
</p>



</div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[project euler problem 25]]></title>
    <link href="http://www.lvkaiyang.tk//blog/2013/04/30/project-euler-25/"/>
    <updated>2013-04-30T14:02:00+08:00</updated>
    <id>http://www.lvkaiyang.tk//blog/2013/04/30/project-euler-25</id>
    <content type="html"><![CDATA[<p></p></p>

<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Problem</a></li>
<li><a href="#sec-2">2 Solution</a></li>
<li><a href="#sec-3">3 Answer</a></li>
</ul>
</div>
</div>




<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Problem</h2>
<div class="outline-text-2" id="text-1">

<blockquote>

<p>The Fibonacci sequence is defined by the recurrence relation:
</p>
<p>
\(F_{n}\) = \(F_{n-1}\) + \(F_{n-2}\) , where \(F_1\) = 1 and \(F_2\) = 1.
Hence the first 12 terms will be:
</p>
<p>
\(F_1\) = 1 <br/>
\(F_2\) = 1 <br/>
\(F_3\) = 2 <br/>
\(F_4\) = 3 <br/>
\(F_5\) = 5 <br/>
\(F_6\) = 8 <br/>
\(F_7\) = 13 <br/>
\(F_8\) = 21 <br/>
\(F_9\) = 34 <br/>
\(F_{10}\) = 55 <br/>
\(F_{11}\) = 89 <br/>
\(F_{12}\) = 144 <br/>
The 12th term, \(F_{12}\) , is the first term to contain three digits.
</p>
<p>
What is the first term in the Fibonacci sequence to contain 1000 digits?
</p>
</blockquote>


</div>

</div>




<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Solution</h2>
<div class="outline-text-2" id="text-2">

<p>没什么好说的,大数据处理
</p></div>

</div>




<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Answer</h2>
<div class="outline-text-2" id="text-3">

<p>  4782
</p>
<p>
Source:<a href="http://sdrv.ms/ZZ3rEu">C++</a>
</p>



</div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[project euler problem 12]]></title>
    <link href="http://www.lvkaiyang.tk//blog/2013/04/30/project-euler-12/"/>
    <updated>2013-04-30T13:54:00+08:00</updated>
    <id>http://www.lvkaiyang.tk//blog/2013/04/30/project-euler-12</id>
    <content type="html"><![CDATA[<p></p></p>

<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Problem</a></li>
<li><a href="#sec-2">2 Solution</a></li>
<li><a href="#sec-3">3 Answer</a></li>
</ul>
</div>
</div>




<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Problem</h2>
<div class="outline-text-2" id="text-1">

<blockquote>

<p>The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
</p>
<p>
1, 3, 6, 10, 15, 21, 28, 36, 45, 55, &hellip;
</p>
<p>
Let us list the factors of the first seven triangle numbers:
</p>
<p>
 1: 1 <br/>
 3: 1,3 <br/>
 6: 1,2,3,6 <br/>
10: 1,2,5,10 <br/>
15: 1,3,5,15 <br/>
21: 1,3,7,21 <br/>
28: 1,2,4,7,14,28 <br/>
We can see that 28 is the first triangle number to have over five divisors.
</p>
<p>
What is the value of the first triangle number to have over five hundred divisors?
</p>
</blockquote>


</div>

</div>




<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Solution</h2>
<div class="outline-text-2" id="text-2">

<p>n = a * b <br/>
假设 \(a\leq b\),则有 \(a\leq \sqrt{n}\), 每有一个a就有两个被除数.
</p></div>

</div>




<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Answer</h2>
<div class="outline-text-2" id="text-3">

<p>  76576500
</p>
<p>
Source:<a href="http://sdrv.ms/15WaeWW">C++</a>
</p>



</div>
</div>

]]></content>
  </entry>
  
</feed>
